/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    set<int>s;
    void makeVector(TreeNode* root){
        if(root==NULL) return;
        s.insert(root->val);
        makeVector(root->left);
        makeVector(root->right);
    }
    int findSecondMinimumValue(TreeNode* root) {
        makeVector(root);
        if(s.size()<2){
            return -1;
        }
        auto second_element = *next(s.begin(), 1);
        return second_element;
    }
};