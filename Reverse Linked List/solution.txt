/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* reverseList(ListNode* head) {
        if(head==NULL){
            return head;
        }
        vector<int> v;
        ListNode* cur = head;
        ListNode* prev = NULL;
        ListNode* next = NULL;
        while(cur!=NULL){
            next = cur->next ;
            cur->next = prev;
            prev = cur ;
            cur = next;
        }
        return prev;
        // while(temp!=NULL){
        //     v.push_back(temp->val);
        //     temp = temp->next;
        // }
        // head = NULL;
        // for( int i =  0 ; i<v.size() ; i++){
        //     ListNode* newNode = new  ListNode();
        //     newNode->val = v[i];
        //     newNode->next = head;
        //     head = newNode ;
        // }
        // return head;
    }
};